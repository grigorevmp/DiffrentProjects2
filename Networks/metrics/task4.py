import random


class EdgeConnectivity:
    def __init__(self, data):
        self.data = data
        self.n = 100
        self.m = len(self.data)
        self.matrix = [[0 for _ in range(self.n)] for _ in range(self.n)]

        self.generate_graph()

    def find_connectivity(self):
        """
        Find connectivity of network
        :return: connectivity
        """
        connectivity = self.nagamochi(self.n)
        print(f"Connectivity is {connectivity}")
        return connectivity

    def generate_graph(self):
        """
        Generate nagamochi matrix - where connected vertexes is 1
        :return: ~
        """
        for data in self.data:
            self.matrix[data[0]][data[1]] = 1
            self.matrix[data[1]][data[0]] = 1

    def get_degree(self, n):
        """
        :param n: Vn
        :return: connectivity of edge
        """
        return sum(self.matrix[n])

    def get_next_node(self, current_set, nodes):
        """
        :param current_set: current set of MA nodes
        :param nodes: nodes
        :return: next node
        """
        current_max_edge = 0
        next_node = None
        # look through edges
        for node_num in range(nodes):
            # if already watched
            if node_num in current_set:
                continue
            edge_candidate = 0
            # get degree of items in ma_order
            for ma_none_num in current_set:
                edge_candidate += self.matrix[node_num][ma_none_num]
            # This cycle describes next rule [1] ->
            if edge_candidate >= current_max_edge:
                current_max_edge = edge_candidate
                next_node = node_num
        return next_node

    def get_MA_Order(self, nodes):
        """
        Maximum adjacency ordering of the vertices in a graph
        :param nodes: number of nodes
        :return: Maximum adjacency edges
        """
        ma_order = []
        # Take any random node
        randomNode = random.randint(0, nodes - 1)
        # Construct order
        ma_order.append(randomNode)
        # [1] Take next node that has maximum number of edges connecting current order set
        while len(ma_order) < nodes:
            ma_order.append(self.get_next_node(ma_order, nodes))
        return ma_order

    def merge_node(self, vertex1, vertex2):
        """
        Merging two nodes
        :param vertex1: ~
        :param vertex2: ~
        :return: matrix merged vertexes
        """
        # delete connections
        self.matrix[vertex1][vertex2] = self.matrix[vertex2][vertex1] = 0
        # new len is
        new_len = len(self.matrix) - 1
        # create new empty matrix
        new_matrix = [[0 for _ in range(new_len)] for _ in range(new_len)]
        p = 0   # i in new matrix
        for i in range(new_len + 1):
            q = 0   # j in new matrix
            flag = 0
            for j in range(0, i + 1):
                if i == max(vertex1, vertex2):
                    flag = 1
                    break
                elif i == min(vertex1, vertex2):
                    # sum distance if merging vertexes ~ i
                    new_matrix[p][q] = new_matrix[q][p] = \
                        self.matrix[min(vertex1, vertex2)][j] + self.matrix[max(vertex1, vertex2)][j]
                else:
                    if j != vertex1 and j != vertex2:
                        # this entry does not linked with merging vertexes
                        new_matrix[p][q] = new_matrix[q][p] = self.matrix[i][j]
                    else:
                        if j == max(vertex1, vertex2):
                            continue
                        # sum distance if merging vertexes ~ j
                        new_matrix[p][q] = new_matrix[q][p] = self.matrix[i][vertex1] + self.matrix[i][vertex2]
                # same vertexes indexes
                if p == q:
                    new_matrix[p][q] = 0
                q += 1
            if flag == 0:
                p += 1
        return new_matrix

    def nagamochi(self, nodes):
        """
        Nagamochi-Ibaraki algorithm
        // from Web: The main idea of Nagamochi-Ibaraki algorithm is to find the pair of vertices (u, v) such that
        //    minimum cut separating (u, v) is simply a degree cut of either u or v as fast as possible
        :param nodes: number of nodes
        :return:
        """
        # while number of nodes > 2
        if nodes == 2:
            return self.get_degree(0)
        # create ma order
        ma_order = self.get_MA_Order(nodes)
        # connectivity(Vn-1, Vn) == degree(Vn)
        n = len(ma_order) - 1
        # connectivity = min {connectivity(X, Y), connectivity(Gxy)} (connectivity ~ lambda in common algorithms, so
        #   lets left this algorithm understandable
        # edge connectivity is a degree of Vn
        lambda_g = self.get_degree(ma_order[n])
        # nodes vn and vn-1 will be merged
        self.matrix = self.merge_node(ma_order[n], ma_order[n - 1])
        return min(lambda_g, self.nagamochi(nodes - 1))


if __name__ == "__main__":
    input_data = [[0, 5], [0, 8], [0, 12], [0, 15], [0, 24], [0, 25], [0, 29], [0, 31], [0, 35], [0, 38], [0, 39],
                  [0, 44],
                  [0, 45], [0, 48], [0, 62], [0, 63], [0, 64], [0, 67], [0, 67], [0, 68], [0, 80], [0, 80], [0, 80],
                  [0, 81], [0, 87], [1, 7], [1, 13], [1, 13], [1, 27], [1, 28], [1, 28], [1, 28], [1, 34], [1, 36],
                  [1, 41],
                  [1, 46], [1, 51], [1, 51], [1, 51], [1, 55], [1, 75], [1, 75], [1, 76], [1, 78], [1, 78], [1, 79],
                  [1, 82], [1, 85], [1, 86], [1, 86], [1, 88], [1, 90], [1, 94], [2, 5], [2, 6], [2, 24], [2, 24],
                  [2, 25],
                  [2, 29], [2, 29], [2, 29], [2, 29], [2, 29], [2, 32], [2, 35], [2, 38], [2, 43], [2, 44], [2, 44],
                  [2, 45], [2, 47], [2, 49], [2, 58], [2, 60], [2, 62], [2, 63], [2, 65], [2, 67], [2, 71], [2, 77],
                  [2, 87], [2, 92], [2, 98], [3, 7], [3, 11], [3, 14], [3, 14], [3, 16], [3, 16], [3, 16], [3, 20],
                  [3, 27],
                  [3, 34], [3, 36], [3, 37], [3, 51], [3, 52], [3, 53], [3, 54], [3, 55], [3, 57], [3, 61], [3, 75],
                  [3, 75], [3, 76], [3, 78], [3, 82], [3, 84], [3, 85], [3, 85], [3, 88], [3, 89], [3, 90], [3, 91],
                  [3, 94], [3, 95], [3, 95], [3, 96], [3, 96], [3, 96], [3, 97], [3, 97], [4, 5], [4, 8], [4, 25],
                  [4, 29],
                  [4, 33], [4, 35], [4, 35], [4, 39], [4, 43], [4, 43], [4, 44], [4, 49], [4, 49], [4, 58], [4, 64],
                  [4, 64], [4, 65], [4, 66], [4, 67], [4, 69], [4, 71], [4, 73], [4, 77], [4, 77], [4, 87], [4, 92],
                  [4, 92], [4, 93], [4, 93], [5, 12], [5, 22], [5, 22], [5, 29], [5, 29], [5, 32], [5, 39], [5, 42],
                  [5, 43], [5, 43], [5, 44], [5, 44], [5, 58], [5, 58], [5, 63], [5, 63], [5, 64], [5, 65], [5, 66],
                  [5, 71], [5, 73], [5, 83], [5, 87], [5, 87], [5, 98], [6, 8], [6, 8], [6, 10], [6, 22], [6, 24],
                  [6, 24],
                  [6, 25], [6, 29], [6, 32], [6, 38], [6, 43], [6, 44], [6, 48], [6, 48], [6, 49], [6, 62], [6, 65],
                  [6, 65], [6, 65], [6, 68], [6, 70], [6, 77], [6, 87], [6, 92], [6, 92], [6, 92], [6, 93], [7, 13],
                  [7, 16], [7, 17], [7, 18], [7, 20], [7, 23], [7, 26], [7, 27], [7, 37], [7, 37], [7, 41], [7, 46],
                  [7, 50], [7, 51], [7, 52], [7, 52], [7, 53], [7, 54], [7, 59], [7, 61], [7, 78], [7, 78], [7, 79],
                  [7, 84], [7, 88], [7, 94], [7, 94], [7, 94], [7, 97], [8, 15], [8, 22], [8, 22], [8, 24], [8, 24],
                  [8, 29], [8, 32], [8, 33], [8, 35], [8, 35], [8, 38], [8, 38], [8, 39], [8, 39], [8, 42], [8, 42],
                  [8, 44], [8, 47], [8, 58], [8, 62], [8, 63], [8, 64], [8, 68], [8, 68], [8, 71], [8, 73], [8, 81],
                  [8, 81], [8, 92], [9, 14], [9, 14], [9, 16], [9, 21], [9, 23], [9, 27], [9, 27], [9, 34], [9, 34],
                  [9, 46], [9, 46], [9, 50], [9, 52], [9, 52], [9, 53], [9, 54], [9, 55], [9, 56], [9, 59], [9, 78],
                  [9, 79], [9, 85], [9, 88], [9, 89], [9, 91], [9, 95], [9, 96], [9, 99], [9, 99], [10, 12], [10, 12],
                  [10, 24], [10, 30], [10, 32], [10, 35], [10, 39], [10, 39], [10, 42], [10, 45], [10, 45], [10, 45],
                  [10, 45], [10, 49], [10, 58], [10, 62], [10, 62], [10, 63], [10, 65], [10, 65], [10, 67], [10, 69],
                  [10, 70], [10, 72], [10, 77], [10, 80], [10, 81], [10, 92], [10, 98], [11, 18], [11, 18], [11, 19],
                  [11, 19], [11, 21], [11, 23], [11, 26], [11, 28], [11, 28], [11, 34], [11, 34], [11, 36], [11, 46],
                  [11, 53], [11, 54], [11, 54], [11, 56], [11, 57], [11, 74], [11, 76], [11, 79], [11, 79], [11, 82],
                  [11, 82], [11, 86], [11, 86], [11, 89], [11, 94], [11, 95], [11, 95], [11, 95], [11, 96], [11, 99],
                  [12, 15], [12, 15], [12, 22], [12, 24], [12, 24], [12, 25], [12, 25], [12, 30], [12, 30], [12, 31],
                  [12, 31], [12, 38], [12, 39], [12, 43], [12, 44], [12, 47], [12, 57], [12, 58], [12, 62], [12, 65],
                  [12, 69], [12, 70], [12, 71], [12, 80], [12, 93], [13, 14], [13, 16], [13, 18], [13, 20], [13, 20],
                  [13, 26], [13, 34], [13, 37], [13, 51], [13, 51], [13, 52], [13, 56], [13, 56], [13, 57], [13, 59],
                  [13, 61], [13, 74], [13, 74], [13, 76], [13, 78], [13, 82], [13, 84], [13, 84], [13, 85], [13, 85],
                  [13, 88], [13, 89], [13, 94], [13, 94], [13, 94], [13, 96], [13, 99], [14, 17], [14, 20], [14, 27],
                  [14, 45], [14, 50], [14, 53], [14, 55], [14, 56], [14, 56], [14, 56], [14, 76], [14, 84], [14, 85],
                  [14, 86], [14, 88], [14, 90], [14, 95], [14, 95], [14, 96], [14, 99], [15, 22], [15, 22], [15, 24],
                  [15, 25], [15, 31], [15, 32], [15, 40], [15, 45], [15, 47], [15, 49], [15, 60], [15, 62], [15, 64],
                  [15, 65], [15, 69], [15, 69], [15, 72], [15, 73], [15, 80], [15, 81], [15, 81], [15, 81], [15, 81],
                  [15, 83], [15, 87], [15, 87], [15, 92], [15, 93], [16, 19], [16, 20], [16, 26], [16, 27], [16, 28],
                  [16, 28], [16, 34], [16, 37], [16, 46], [16, 50], [16, 53], [16, 54], [16, 78], [16, 79], [16, 82],
                  [16, 85], [16, 91], [16, 96], [16, 97], [16, 99], [17, 19], [17, 20], [17, 21], [17, 23], [17, 26],
                  [17, 26], [17, 26], [17, 28], [17, 34], [17, 36], [17, 36], [17, 44], [17, 51], [17, 54], [17, 57],
                  [17, 59], [17, 61], [17, 61], [17, 74], [17, 75], [17, 78], [17, 85], [17, 86], [17, 91], [17, 94],
                  [17, 95], [17, 96], [17, 97], [17, 97], [18, 19], [18, 20], [18, 27], [18, 28], [18, 34], [18, 36],
                  [18, 36], [18, 36], [18, 37], [18, 41], [18, 51], [18, 52], [18, 54], [18, 55], [18, 55], [18, 56],
                  [18, 59], [18, 78], [18, 82], [18, 84], [18, 84], [18, 84], [18, 85], [18, 94], [18, 94], [18, 95],
                  [19, 27], [19, 27], [19, 28], [19, 28], [19, 34], [19, 37], [19, 41], [19, 41], [19, 50], [19, 51],
                  [19, 51], [19, 52], [19, 55], [19, 56], [19, 61], [19, 75], [19, 76], [19, 82], [19, 82], [19, 88],
                  [19, 88], [19, 89], [19, 90], [19, 96], [19, 97], [19, 97], [19, 99], [20, 23], [20, 36], [20, 37],
                  [20, 46], [20, 55], [20, 61], [20, 61], [20, 74], [20, 76], [20, 78], [20, 79], [20, 82], [20, 85],
                  [20, 85], [20, 86], [20, 89], [20, 91], [20, 91], [20, 94], [20, 95], [20, 96], [20, 96], [20, 99],
                  [21, 26], [21, 26], [21, 26], [21, 27], [21, 27], [21, 28], [21, 28], [21, 34], [21, 37], [21, 51],
                  [21, 53], [21, 53], [21, 54], [21, 55], [21, 56], [21, 57], [21, 61], [21, 74], [21, 76], [21, 78],
                  [21, 78], [21, 84], [21, 85], [21, 85], [21, 88], [21, 89], [21, 94], [22, 24], [22, 24], [22, 30],
                  [22, 30], [22, 31], [22, 32], [22, 33], [22, 40], [22, 40], [22, 42], [22, 42], [22, 44], [22, 47],
                  [22, 58], [22, 62], [22, 66], [22, 67], [22, 67], [22, 70], [22, 70], [22, 73], [22, 73], [22, 77],
                  [22, 87], [22, 93], [22, 98], [23, 26], [23, 28], [23, 34], [23, 46], [23, 50], [23, 53], [23, 56],
                  [23, 56], [23, 57], [23, 59], [23, 59], [23, 59], [23, 74], [23, 76], [23, 78], [23, 78], [23, 85],
                  [23, 90], [23, 90], [23, 90], [23, 90], [23, 94], [23, 96], [23, 99], [24, 25], [24, 30], [24, 30],
                  [24, 30], [24, 31], [24, 48], [24, 49], [24, 58], [24, 58], [24, 60], [24, 64], [24, 65], [24, 80],
                  [24, 80], [24, 83], [24, 93], [24, 98], [25, 31], [25, 32], [25, 32], [25, 32], [25, 33], [25, 33],
                  [25, 35], [25, 40], [25, 40], [25, 42], [25, 44], [25, 45], [25, 49], [25, 60], [25, 60], [25, 63],
                  [25, 64], [25, 68], [25, 69], [25, 69], [25, 70], [25, 71], [25, 71], [25, 73], [25, 77], [25, 77],
                  [25, 83], [25, 92], [25, 92], [25, 98], [26, 27], [26, 27], [26, 27], [26, 36], [26, 37], [26, 37],
                  [26, 51], [26, 54], [26, 54], [26, 75], [26, 75], [26, 78], [26, 82], [26, 85], [26, 86], [26, 88],
                  [26, 89], [26, 91], [26, 95], [26, 96], [26, 96], [26, 99], [26, 99], [26, 99], [27, 28], [27, 34],
                  [27, 36], [27, 57], [27, 57], [27, 61], [27, 74], [27, 75], [27, 76], [27, 79], [27, 91], [27, 96],
                  [27, 96], [27, 96], [28, 41], [28, 41], [28, 52], [28, 54], [28, 54], [28, 54], [28, 57], [28, 59],
                  [28, 59], [28, 61], [28, 74], [28, 74], [28, 75], [28, 75], [28, 76], [28, 84], [28, 84], [28, 86],
                  [28, 86], [28, 88], [28, 90], [28, 91], [28, 91], [28, 99], [28, 99], [29, 33], [29, 35], [29, 35],
                  [29, 40], [29, 43], [29, 44], [29, 45], [29, 47], [29, 49], [29, 60], [29, 62], [29, 63], [29, 68],
                  [29, 68], [29, 69], [29, 71], [29, 73], [29, 73], [29, 77], [29, 87], [29, 93], [29, 93], [30, 32],
                  [30, 33], [30, 35], [30, 35], [30, 38], [30, 38], [30, 38], [30, 39], [30, 42], [30, 45], [30, 47],
                  [30, 49], [30, 49], [30, 65], [30, 67], [30, 69], [30, 70], [30, 70], [30, 80], [30, 81], [30, 87],
                  [30, 92], [30, 93], [30, 93], [30, 98], [31, 33], [31, 38], [31, 38], [31, 39], [31, 43], [31, 43],
                  [31, 44], [31, 47], [31, 47], [31, 49], [31, 49], [31, 49], [31, 62], [31, 66], [31, 66], [31, 70],
                  [31, 70], [31, 71], [31, 71], [31, 73], [31, 73], [31, 87], [31, 92], [31, 98], [31, 98], [32, 33],
                  [32, 33], [32, 33], [32, 33], [32, 33], [32, 38], [32, 38], [32, 38], [32, 40], [32, 42], [32, 42],
                  [32, 43], [32, 48], [32, 48], [32, 49], [32, 58], [32, 58], [32, 58], [32, 64], [32, 65], [32, 65],
                  [32, 65], [32, 67], [32, 70], [32, 73], [32, 73], [32, 83], [32, 83], [33, 40], [33, 44], [33, 45],
                  [33, 47], [33, 48], [33, 60], [33, 62], [33, 62], [33, 63], [33, 64], [33, 67], [33, 68], [33, 68],
                  [33, 68], [33, 70], [33, 80], [33, 80], [33, 81], [33, 93], [33, 93], [33, 98], [33, 98], [34, 36],
                  [34, 41], [34, 50], [34, 54], [34, 55], [34, 61], [34, 74], [34, 74], [34, 75], [34, 76], [34, 76],
                  [34, 76], [34, 78], [34, 82], [34, 84], [34, 85], [34, 91], [34, 97], [35, 42], [35, 42], [35, 42],
                  [35, 43], [35, 45], [35, 49], [35, 49], [35, 56], [35, 58], [35, 58], [35, 58], [35, 60], [35, 60],
                  [35, 60], [35, 62], [35, 62], [35, 65], [35, 66], [35, 68], [35, 70], [35, 71], [35, 72], [35, 81],
                  [35, 87], [35, 87], [35, 93], [36, 41], [36, 46], [36, 46], [36, 50], [36, 51], [36, 54], [36, 57],
                  [36, 61], [36, 61], [36, 78], [36, 79], [36, 79], [36, 82], [36, 84], [36, 85], [36, 85], [36, 86],
                  [36, 88], [36, 89], [36, 90], [36, 90], [36, 97], [36, 99], [37, 41], [37, 51], [37, 54], [37, 76],
                  [37, 78], [37, 78], [37, 78], [37, 82], [37, 85], [37, 89], [37, 89], [37, 90], [37, 91], [37, 95],
                  [37, 95], [37, 99], [38, 39], [38, 43], [38, 44], [38, 44], [38, 45], [38, 45], [38, 47], [38, 49],
                  [38, 60], [38, 62], [38, 64], [38, 64], [38, 67], [38, 68], [38, 69], [38, 69], [38, 72], [38, 72],
                  [38, 72], [38, 80], [38, 87], [39, 40], [39, 40], [39, 45], [39, 48], [39, 49], [39, 64], [39, 67],
                  [39, 68], [39, 69], [39, 69], [39, 70], [39, 70], [39, 72], [39, 81], [39, 83], [39, 98], [40, 44],
                  [40, 44], [40, 45], [40, 45], [40, 47], [40, 48], [40, 60], [40, 62], [40, 62], [40, 62], [40, 65],
                  [40, 66], [40, 67], [40, 71], [40, 71], [40, 72], [40, 72], [40, 72], [40, 73], [40, 77], [40, 80],
                  [40, 81], [40, 87], [41, 56], [41, 56], [41, 56], [41, 57], [41, 57], [41, 75], [41, 76], [41, 78],
                  [41, 84], [41, 86], [41, 89], [41, 90], [41, 94], [41, 99], [41, 99], [41, 99], [42, 44], [42, 45],
                  [42, 47], [42, 47], [42, 49], [42, 62], [42, 63], [42, 63], [42, 65], [42, 68], [42, 69], [42, 71],
                  [42, 71], [42, 73], [42, 81], [42, 83], [42, 83], [42, 87], [42, 92], [43, 44], [43, 58], [43, 60],
                  [43, 60], [43, 62], [43, 65], [43, 68], [43, 68], [43, 69], [43, 69], [43, 73], [43, 77], [43, 81],
                  [43, 83], [43, 87], [43, 92], [43, 92], [43, 93], [43, 98], [44, 45], [44, 47], [44, 48], [44, 55],
                  [44, 58], [44, 58], [44, 60], [44, 64], [44, 64], [44, 64], [44, 65], [44, 66], [44, 66], [44, 68],
                  [44, 69], [44, 70], [44, 72], [44, 77], [44, 87], [44, 92], [44, 93], [45, 49], [45, 58], [45, 59],
                  [45, 63], [45, 66], [45, 66], [45, 66], [45, 70], [45, 72], [45, 77], [45, 77], [45, 80], [45, 80],
                  [45, 83], [45, 83], [46, 50], [46, 53], [46, 57], [46, 57], [46, 57], [46, 74], [46, 74], [46, 76],
                  [46, 78], [46, 82], [46, 82], [46, 84], [46, 89], [46, 89], [46, 90], [46, 90], [46, 94], [46, 95],
                  [46, 95], [46, 97], [47, 49], [47, 58], [47, 60], [47, 63], [47, 63], [47, 66], [47, 69], [47, 71],
                  [47, 71], [47, 73], [47, 73], [47, 93], [47, 98], [48, 49], [48, 49], [48, 49], [48, 60], [48, 64],
                  [48, 66], [48, 69], [48, 69], [48, 70], [48, 72], [48, 77], [48, 77], [48, 81], [48, 83], [48, 87],
                  [49, 58], [49, 60], [49, 60], [49, 62], [49, 62], [49, 63], [49, 64], [49, 64], [49, 66], [49, 80],
                  [49, 81], [49, 84], [50, 51], [50, 52], [50, 55], [50, 55], [50, 57], [50, 59], [50, 61], [50, 74],
                  [50, 74], [50, 74], [50, 74], [50, 76], [50, 78], [50, 82], [50, 84], [50, 85], [50, 89], [50, 89],
                  [50, 95], [50, 97], [50, 97], [51, 56], [51, 56], [51, 57], [51, 61], [51, 74], [51, 74], [51, 74],
                  [51, 78], [51, 82], [51, 82], [51, 85], [51, 89], [51, 91], [51, 94], [51, 96], [51, 97], [51, 99],
                  [52, 54], [52, 54], [52, 55], [52, 55], [52, 57], [52, 57], [52, 74], [52, 82], [52, 82], [52, 84],
                  [52, 85], [52, 85], [52, 88], [52, 88], [52, 89], [52, 91], [52, 94], [52, 95], [52, 95], [52, 95],
                  [52, 96], [52, 99], [53, 54], [53, 55], [53, 56], [53, 56], [53, 61], [53, 74], [53, 74], [53, 78],
                  [53, 79], [53, 79], [53, 82], [53, 82], [53, 85], [53, 86], [53, 88], [53, 88], [53, 90], [53, 97],
                  [53, 99], [54, 55], [54, 55], [54, 55], [54, 74], [54, 78], [54, 79], [54, 79], [54, 84], [54, 85],
                  [54, 88], [54, 89], [54, 94], [54, 95], [54, 96], [54, 99], [55, 56], [55, 74], [55, 74], [55, 78],
                  [55, 78], [55, 84], [55, 84], [55, 89], [55, 90], [55, 94], [55, 96], [56, 75], [56, 75], [56, 76],
                  [56, 88], [56, 88], [56, 88], [56, 90], [56, 91], [56, 91], [56, 94], [56, 95], [56, 95], [56, 96],
                  [56, 97], [56, 99], [57, 61], [57, 75], [57, 75], [57, 79], [57, 84], [57, 84], [57, 90], [57, 95],
                  [57, 96], [58, 64], [58, 64], [58, 65], [58, 65], [58, 69], [58, 71], [58, 72], [58, 77], [58, 80],
                  [58, 80], [58, 80], [58, 92], [58, 92], [58, 98], [58, 98], [59, 61], [59, 74], [59, 75], [59, 76],
                  [59, 76], [59, 89], [59, 89], [59, 89], [59, 90], [59, 91], [59, 97], [59, 99], [59, 99], [60, 62],
                  [60, 63], [60, 64], [60, 65], [60, 67], [60, 68], [60, 72], [60, 73], [60, 73], [60, 77], [60, 80],
                  [60, 81], [60, 83], [60, 83], [61, 70], [61, 76], [61, 78], [61, 82], [61, 82], [61, 84], [61, 84],
                  [61, 85], [61, 85], [61, 88], [61, 88], [61, 88], [61, 89], [61, 91], [61, 91], [61, 94], [61, 94],
                  [61, 95], [62, 64], [62, 65], [62, 66], [62, 67], [62, 68], [62, 72], [62, 73], [62, 83], [62, 87],
                  [62, 98], [63, 65], [63, 66], [63, 66], [63, 69], [63, 71], [63, 71], [63, 73], [63, 77], [63, 80],
                  [63, 83], [63, 87], [63, 92], [63, 93], [63, 93], [63, 98], [63, 98], [64, 67], [64, 69], [64, 70],
                  [64, 70], [64, 72], [64, 73], [64, 73], [64, 81], [64, 83], [64, 92], [64, 93], [65, 67], [65, 69],
                  [65, 69], [65, 70], [65, 72], [65, 72], [65, 83], [65, 87], [65, 92], [65, 93], [65, 93], [65, 98],
                  [66, 68], [66, 69], [66, 69], [66, 70], [66, 71], [66, 77], [66, 92], [66, 92], [66, 92], [66, 98],
                  [67, 68], [67, 70], [67, 70], [67, 71], [67, 72], [67, 73], [67, 83], [67, 92], [67, 98], [68, 70],
                  [68, 70], [68, 70], [68, 80], [68, 80], [68, 80], [68, 92], [68, 93], [69, 72], [69, 72], [69, 81],
                  [69, 81], [69, 82], [70, 72], [70, 77], [70, 92], [70, 98], [70, 98], [71, 73], [71, 80], [71, 80],
                  [71, 83], [71, 87], [71, 92], [71, 98], [72, 73], [72, 77], [72, 80], [72, 80], [72, 87], [72, 87],
                  [72, 87], [72, 93], [72, 93], [72, 98], [73, 77], [73, 81], [73, 81], [73, 87], [74, 76], [74, 82],
                  [74, 82], [74, 82], [74, 86], [74, 88], [74, 88], [74, 91], [74, 94], [74, 97], [74, 99], [75, 79],
                  [75, 84], [75, 85], [75, 86], [75, 90], [75, 95], [75, 96], [75, 97], [75, 97], [75, 97], [76, 78],
                  [76, 78], [76, 84], [76, 84], [76, 85], [76, 88], [76, 88], [76, 90], [76, 94], [76, 95], [76, 95],
                  [77, 80], [77, 81], [77, 83], [77, 83], [77, 83], [77, 87], [77, 87], [77, 87], [77, 87], [77, 93],
                  [78, 79], [78, 82], [78, 82], [78, 84], [78, 85], [78, 88], [78, 89], [78, 89], [78, 91], [78, 94],
                  [79, 84], [79, 90], [79, 91], [79, 91], [79, 94], [79, 95], [79, 97], [79, 99], [80, 81], [80, 81],
                  [80, 83], [80, 87], [80, 98], [81, 83], [81, 87], [81, 98], [82, 90], [82, 91], [82, 94], [83, 98],
                  [84, 91], [84, 95], [84, 95], [84, 97], [85, 86], [85, 86], [85, 89], [85, 90], [85, 90], [85, 91],
                  [85, 95], [85, 97], [86, 88], [86, 89], [86, 90], [86, 91], [86, 91], [86, 94], [86, 95], [86, 95],
                  [87, 92], [87, 92], [87, 92], [88, 89], [88, 90], [88, 91], [88, 94], [88, 95], [88, 95], [88, 97],
                  [88, 99], [89, 90], [89, 91], [89, 94], [89, 94], [89, 95], [89, 95], [89, 97], [89, 97], [89, 99],
                  [89, 99], [90, 97], [90, 97], [90, 97], [91, 96], [91, 97], [92, 93], [92, 93], [92, 93], [92, 98],
                  [92, 98], [94, 97], [94, 97], [95, 97], [96, 97]]

    graph = EdgeConnectivity(input_data)
    graph.find_connectivity()

"""Requirements"""

# Файл с решением четвертой задачи (связность произвольной сети) или архив с программой.
# Программа оценивается выше, чем решение на листочке.
# Если Вы сдаете программу, то приложите оценку сложности Ваших алгоритмов.

# Сложность алгоритма Нагомочи: O(mn + n^2 * log(n))
